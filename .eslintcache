[{"D:\\Dev\\react-app\\src\\reportWebVitals.js":"1","D:\\Dev\\react-app\\src\\index.jsx":"2","D:\\Dev\\react-app\\src\\App.jsx":"3","D:\\Dev\\react-app\\src\\Footer.jsx":"4","D:\\Dev\\react-app\\src\\Nav.jsx":"5","D:\\Dev\\react-app\\src\\Logo.jsx":"6"},{"size":375,"mtime":1610485992247,"results":"7","hashOfConfig":"8"},{"size":517,"mtime":1610546104665,"results":"9","hashOfConfig":"8"},{"size":2491,"mtime":1610552780606,"results":"10","hashOfConfig":"8"},{"size":916,"mtime":1610551555427,"results":"11","hashOfConfig":"8"},{"size":574,"mtime":1610550666877,"results":"12","hashOfConfig":"8"},{"size":228,"mtime":1610548709262,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"fxvw0r",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Dev\\react-app\\src\\reportWebVitals.js",[],["28","29"],"D:\\Dev\\react-app\\src\\index.jsx",[],"D:\\Dev\\react-app\\src\\App.jsx",["30"],"D:\\Dev\\react-app\\src\\Footer.jsx",[],"D:\\Dev\\react-app\\src\\Nav.jsx",["31","32"],"import \"./Nav.css\";\r\nimport { useState, useEffect } from \"react\"\r\nfunction Nav(props) { // component\r\n  // 1 define state getter and setter\r\n  // get time\r\n  // set current time on interval\r\n  // print time in template\r\n\r\n  const [time, settime] = useState(0)\r\n  /*useEffect(() =>{\r\n    setInterval(() => {\r\n\r\n    settime(Date.now())\r\n    console.log(Date.now());\r\n  }, 1000);\r\n}, [])*/\r\n\r\n  return ( // JSX = react html template style virtual DOM\r\n    <nav>\r\n      Nav - i am {props.myname} - and thats the time: \r\n      {time}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","D:\\Dev\\react-app\\src\\Logo.jsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":31,"column":9,"nodeType":"39","endLine":49,"endColumn":10},{"ruleId":"40","severity":1,"message":"41","line":2,"column":20,"nodeType":"42","messageId":"43","endLine":2,"endColumn":29},{"ruleId":"40","severity":1,"message":"44","line":9,"column":16,"nodeType":"42","messageId":"43","endLine":9,"endColumn":23},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'settime' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]